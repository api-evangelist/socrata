{
    "id": "12c35f0e1013419467237c57aee872a4",
    "name": "Socrata Open Data Network Discovery API",
    "description": null,
    "auth": null,
    "events": null,
    "variables": [],
    "order": [],
    "folders_order": [],
    "folders": [],
    "requests": [
        {
            "id": "d5b9df9cebfdf311de4a000fe24bd5ca",
            "name": "Count assets by domain",
            "url": "http:\/\/api.us.socrata.com\/api\/catalog\/v1\/domains",
            "description": "Returns each domain and the count of assets owned by that domain. The counts may be restricted according to any of the query parameters described in the Complete Search API, with the exception of the q text search param.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "12c35f0e1013419467237c57aee872a4",
            "rawModeData": ""
        },
        {
            "id": "3e473bd92d9237f4d9752aecab936adf",
            "name": "Count assets by tag",
            "url": "http:\/\/api.us.socrata.com\/api\/catalog\/v1\/domain_tags",
            "description": "Returns each domain-specific tag and the count of assets having that tag. The counts may be restricted according to any of the query parameters described in the Complete Search API.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "limit",
                    "description": "Maximum number of results to return",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "12c35f0e1013419467237c57aee872a4",
            "rawModeData": ""
        },
        {
            "id": "d6d258caecdd08438c55fcb89bba913a",
            "name": "Count assets by category",
            "url": "http:\/\/api.us.socrata.com\/api\/catalog\/v1\/domain_categories",
            "description": "Returns each domain-specific category and the count of assets having that category. The counts may be restricted according to any of the query parameters described in the Complete Search API.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "limit",
                    "description": "Maximum number of results to return",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "12c35f0e1013419467237c57aee872a4",
            "rawModeData": ""
        },
        {
            "id": "32bf88cfa6baa25642ae10afad750ba5",
            "name": "Count assets by facets",
            "url": "http:\/\/api.us.socrata.com\/api\/catalog\/v1\/domains\/{search_context}\/facets",
            "description": "Returns each domain-specific category and the count of assets having that category. The counts may be restricted according to any of the query parameters described in the Complete Search API.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "search_context",
                    "description": "Each asset is owned by a single domain. The `domain` and `search_context` parameters will the results to those from the given domains. If you seek to limit query results to a singular domains, please provide the same name in both domains and `search_context`. If you wish to search data across multiple domains, please provide all domains in the `domains` parameter. If you furthermore wish to see that data through the eyes of a given domain, e.g. filter by their approval requiements and search acr",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "12c35f0e1013419467237c57aee872a4",
            "rawModeData": ""
        },
        {
            "id": "55c9285114c6cf6e1f8ad040fbac78f1",
            "name": "List all assets",
            "url": "http:\/\/api.us.socrata.com\/api\/catalog\/v1",
            "description": "This is the main operation for the Socrata Discovery API. It allows you to access and explore all public metadata published on the Socrata platform.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "limit",
                    "description": "Maximum number of results to return",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "offset",
                    "description": "The index of the result array where to start the returned list of results",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ids",
                    "description": "Each asset is uniquely identified by a string of 9 characters. This string is a sequence of 4 alphanumeric characters, a dash, then 4 more alphanumeric characters. The `ids` parameter will limit the results to the assets identified by the given ids.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "domains",
                    "description": "Each asset is owned by a single domain. The `domain` and `search_context` parameters will the results to those from the given domains. If you seek to limit query results to a singular domains, please provide the same name in both domains and `search_context`. If you wish to search data across multiple domains, please provide all domains in the `domains` parameter. If you furthermore wish to see that data through the eyes of a given domain, e.g. filter by their approval requiements and search acr",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "search_context",
                    "description": "Each asset is owned by a single domain. The `domain` and `search_context` parameters will the results to those from the given domains. If you seek to limit query results to a singular domains, please provide the same name in both domains and `search_context`. If you wish to search data across multiple domains, please provide all domains in the `domains` parameter. If you furthermore wish to see that data through the eyes of a given domain, e.g. filter by their approval requiements and search acr",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "categories",
                    "description": "Each asset may have categories\/tags assigned by Socrata or by the owning domain. The `categories` and `tags` parameters will limit the results to those having the given category or tag. To search the categories\/tags of a particular domain, you must also include the `search_context` param. To search the categories\/tags that were assigned by Socrata, exclude the `search_context` param.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "tags",
                    "description": "Each asset may have categories\/tags assigned by Socrata or by the owning domain. The `categories` and `tags` parameters will limit the results to those having the given category or tag. To search the categories\/tags of a particular domain, you must also include the `search_context` param. To search the categories\/tags that were assigned by Socrata, exclude the `search_context` param.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "q",
                    "description": "Assets may be searched by any of the text found in the `name`, `description`, `category`, `tags`, `column names`, `column fieldnames`, `column descriptions`, `attribution` fields. The `q` parameter takes arbitrary text and will limit the results to those having some or all of the text. The optional `min_should_match` parameter may be used to explicitly specify the number or percent of words that must match. See the [Elasticsearch](https:\/\/www.elastic.co\/guide\/en\/elasticsearch\/reference\/current\/q",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "min_should_match",
                    "description": "Assets may be searched by any of the text found in the `name`, `description`, `category`, `tags`, `column names`, `column fieldnames`, `column descriptions`, `attribution` fields. The `q` parameter takes arbitrary text and will limit the results to those having some or all of the text. The optional `min_should_match` parameter may be used to explicitly specify the number or percent of words that must match. See the [Elasticsearch](https:\/\/www.elastic.co\/guide\/en\/elasticsearch\/reference\/current\/q",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "only",
                    "description": "Each asset has a logical type, such as a dataset or chart. The `only` parameter will limit the results to a particular type. The current taxonomy includes the following types:\n\n*api*, *calendar*, *chart*, *datalens*, *dataset*, *federated_href*, *file*, *filter*, *form*, *href*, *link*, *map*, *measure*, *story*, *visualization*\n\nYou may use either the singular or plural variants of each type.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "attribution",
                    "description": "Assets can be attributed to various organizations. The `attribution` parameter will limit the results to those attributed to the given organization.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "license",
                    "description": "Assets can be released under various licenses. The `license` parameter will limit the results to those with the given license.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "derived_from",
                    "description": "Some assets are uploaded directly and others are created from already existing data. For example, charts are derived from an existing parent dataset. The `derived_from` parameter will limit the results to those that derive from the given dataset.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "provenance",
                    "description": "While many assets on Socrata are owned by government data publishers and other staff, some visualizations, maps, filtered views, and more are created by a member of the community. These assets are usually denoted with a 'Community' badge on the data catalog. A `provenance=official` parameter will limit the results to official assets, i.e. those owned by roled users on the domain; a `provenance=community` parameter will limit the results to community created assets.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "for_user",
                    "description": "Each asset has an owner. The `for_user` parameter will limit the results to those owned by the given user.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "column_names",
                    "description": "Tabular assets are composed of rows and columns. The `column_names` parameter will limit the results to those having the given column names.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "order",
                    "description": "The results of all the above filters can be sorted by any of the attributes in the list below. If not specified, the results are sorted by relevance. All sort values can optionally append a space and either 'ASC' or 'DESC' for ascending or descending sorts, but note that the space must be URL-escaped with '+' or '%20'. The default for each attribute is given in the table.\n\nIt is possible for search results to have missing values for some of these sort fields (such as 'domain_category', for examp",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "derived",
                    "description": "Some assets are uploaded directly and others are created from already existing data. For example, charts are derived from an existing parent dataset. The `derived` parameter will limit the results to one or other of these classes of data. A 'true' value finds derived assets and a 'false' value finds base assets.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "boostOfficial",
                    "description": "It is possible to adjust the rankings of official assets to promote them above community-created content. This leverages the weight function of [function score queries](https:\/\/www.elastic.co\/guide\/en\/elasticsearch\/reference\/current\/query-dsl-function-score-query.html#function-weight) in Elasticsearch. This weight acts as a multiplier for the relevance score of each official document. Thus, a number between 0 and 1 will demote official assets, while any number greater than 1 will boost them.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "12c35f0e1013419467237c57aee872a4",
            "rawModeData": ""
        },
        {
            "id": "0d7f4e95c9554bb77924ac139e5ccfbb",
            "name": "Autocomplete asset names",
            "url": "http:\/\/api.us.socrata.com\/api\/catalog\/v1\/autocomplete",
            "description": "To improve the catalog search experience, we added an autocomplete API, which returns a list of titles that match the search query. This API supports all the same filtering parameters as the top-level complete search API. The response body has the same shape as the search API, containing 'resultSetSize', 'results', and 'timings' fields at the root of the response object. The 'results' differ however as an array of objects with the following two fields:\nField \tDescription\ntitle \tthe raw title mat",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "q",
                    "description": "Assets may be searched by any of the text found in the `name`, `description`, `category`, `tags`, `column names`, `column fieldnames`, `column descriptions`, `attribution` fields. The `q` parameter takes arbitrary text and will limit the results to those having some or all of the text. The optional `min_should_match` parameter may be used to explicitly specify the number or percent of words that must match. See the [Elasticsearch](https:\/\/www.elastic.co\/guide\/en\/elasticsearch\/reference\/current\/q",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "limit",
                    "description": "Maximum number of results to return",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "12c35f0e1013419467237c57aee872a4",
            "rawModeData": ""
        }
    ]
}